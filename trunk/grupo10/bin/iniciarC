#!/bin/bash
#$ARRIDIR, $PEPRADIR, $RECHADIR, $BINDIR


function mostrarAyuda {
	echo
	eco "MODO DE USO: . iniciarC [OPCIONES]" "$GRE"
	eco
	eco "Para que el seteo de las variables sea efectivo " "$GRE"
	eco "debe ejecutarse en el mismo ambiente en el que se esta." "$GRE"
	eco
	eco "OPCIONES:" "$GRE"
	eco "-h, --help	Muestra esta pantalla" "$GRE"
	eco "-v, --version	Informa acerca de la version" "$GRE"
	eco
	return 0
}

function obtener_version_bash
{

	VERSION=$(bash --version | grep '.*versi贸n 4.2.10.*')
	if [ -n "$VERSION" ];then
		VERSION=1
	else
		VERSION=2
	fi

}


function verificar_parametros
{
	# Verificacion de cantidad de parametros y codigos numericos
	SALIR='N'	
	
	if [ "$1" -ne 0 ]
	then

		if [ "$1" -gt 1 ]
		then
			echo "Cantidad erronea de parametros, pruebe con -h."
			#log 2 "a lo sumo 1"
			SALIR='S'
		else

			if [ "$2" = '--help' -o "$2" = "-h" ]
			then
				mostrarAyuda	
				SALIR='S'
			else
				if [ "$2" = "--version" -o "$2" = "-v" ]
				then
					echo
					eco "iniciarC v 1.0" "$GRE"
					eco "Escrito por pnotari@fi.uba.ar" "$GRE"
					echo
					SALIR='S'
				else
					echo "Parametro invalido, pruebe con --help  -h"
					SALIR='S'
				fi
			fi
		fi
	fi
}

function eco
{
	echo -e "\E["$2"m"$1"\033[0m"
}


function debug
{
	if [ A != A ];then
		echo "$1"
	fi
}


function log
{
	#en $1 recibe el codigo de error
	#en $2 recibe el parametro opcional
	
	#se evalua que exista la lib de logueo
	#echo $2 | grep .*loguearC.* > /dev/null

	if [ "$SIN_LOG" != "S" ];then 
		if [ -n "$2" ];then
			loguearC -s "iniciarC" "$1" "$2"
			debug loguear -s "$1" "$2"
		else
			loguearC -s "$1"
			debug loguear -s "iniciarC" "$1"
		fi
	fi
}


function verifica_instancia
{
#verifica si existe otra instancia del proceso tanto de detectar como de sumar
#viene en $1
#devuelve $INSTANCIA = S si existe una instancia en ejecucion

	INSTANCIA=N

	ps | grep .*$1.* > /dev/null

	if [ "$?" -eq 0 ];then
		INSTANCIA="S"
	fi
}

function preguntar
{
	
	echo -e "Ya se encuentran seteadas las variables: \n"
	echo -e "$SETEADAS"
	echo "Desea continuar con la ejecici贸n (S/N):"
	
	OK=''
	while [ "$OK" != "S" ]
	do
		read RTA

		if [ "$RTA" = "S"  -o "$RTA" = "s" ];then
			CONTINUA="S"
			OK="S"	
		else
			if [ "$RTA" = "N" -o "$RTA" = "n" ];then
				CONTINUA="N"
				OK="S"
			fi
		fi
	done

}

function verificar_variables
{
	CONTINUA=''
	SETEADA=''
	SETEADAS=''
	NO_SETEADA=''
	NO_ASK="$1"

	debug "verificando variables ..."
	debug "$CURRDIR"
	
	if [ -n "$CURRDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$CURRDIR :'"$CURRDIR\n"
	else
		NO_SETEADA="S"
	fi

	if [ -n "$ARRIDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$ARRIDIR :'"$ARRIDIR\n"
	else
		NO_SETEADA="S"
	fi


	if [ -n "$PREPADIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$PREPADIR :'"$PREPADIR\n"
	else
		NO_SETEADA="S"
	fi

	if [ -n "$RECHADIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$RECHADIR :'"$RECHADIR\n"
	else
		NO_SETEADA="S"
	fi

	if [ -n "$BINDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$BINDIR :'"$BINDIR\n"
	else
		NO_SETEADA="S"
	fi

	if [ -n "$DATAMAE" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$DATAMAE :'"$DATAMAE\n"
	else
		NO_SETEADA="S"
	fi

	if [ -n "$LIBDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$LIBDIR :'"$LIBDIR\n"
	fi


	if [ -n "$LOGEXT" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$LOGEXT :'"$LOGEXT\n"
	else
		NO_SETEADA="S"
	fi


	if [ -n "$LOGSIZE" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$LOGSIZE :'"$LOGSIZE\n"
	else
		NO_SETEADA="S"
	fi
	
	

	if [ "$SETEADA" = "S" -a "$NO_SETEADA" != "S" -a "$NO_ASK" != "S" ];then
		preguntar
	else
		CONTINUA="S"	
	fi

}


function resolver_path
{
	GRUPO=$(pwd)
	GRUPO=${GRUPO%/*}
	export GRUPO
}


function recupera_propiedad
{
	

	PROPIEDAD=$(cat "$GRUPO/conf/InstalarC.conf" | grep "^$1" | cut -d ' ' --fields=3)
	debug "++++++++++ $PROPIEDAD ++++++++++++++"	

}

function definir_variables
{

	recupera_propiedad "CURRDIR"
	export CURRDIR="$PROPIEDAD"

	recupera_propiedad "ARRIDIR"	
	export ARRIDIR="$GRUPO$PROPIEDAD"

	#recupera_propiedad "PREPADIR"	
	export PREPADIR="$GRUPO/preparados"

	#recupera_propiedad "RECHADIR"
	export RECHADIR="$GRUPO/rechazados"

	recupera_propiedad "BINDIR"
	export BINDIR="$GRUPO$PROPIEDAD"

	recupera_propiedad "DATAMAE"
	export DATAMAE="$PROPIEDAD"

	recupera_propiedad "LIBDIR"
	export LIBDIR="$PROPIEDAD"

	recupera_propiedad "LOGDIR"
	export LOGDIR="$GRUPO$PROPIEDAD"

	recupera_propiedad "LOGEXT"
	export LOGEXT="$PROPIEDAD"

	recupera_propiedad "MAXLOGSIZE"
	export LOGSIZE=$(echo "$PROPIEDAD"*1024 | bc)


	echo "$PATH" | grep .*"$BINDIR".*"$LIBDIR".* > /dev/null

	if [ "$?" != "0" ];then
		export PATH="$BINDIR":"$LIBDIR":.:$PATH
	fi

	export TSLEEP=30

	chmod 777 "$GRUPO"/*	
	chmod 777 "$BINDIR"/*
	chmod 777 "$LIBDIR"/*

	MAESTROS="encuestadores.mae preguntas.mae encuestas.mae"
	COMANDOS="detectarC sumarC listarC"
	LIBRERIAS="loguearC mirarC moverC"

}



function verificar_comandos
{
	#verificacion de los comandos
	#detectarC, sumarC, listarC

	ERR=''
	ERR_MSG=''

	if [ ! -f "$BINDIR/detectarC" ];then
		ERR=13
		ERR_MSG="$ERR_MSG detectarC"
	fi

	if [ ! -f "$BINDIR/sumarC" ];then
		ERR=13
		ERR_MSG="$ERR_MSG sumarC"
	fi

	if [ ! -f "$BINDIR/listarC" ];then
		ERR=13
		ERR_MSG="$ERR_MSG listarC"
	fi

	SIN_LOG=''
	if [ ! -f "$LIBDIR/loguearC" ];then 
		SIN_LOG="S"
	else
		if [ ! -f "$DATAMAE/errores.mae" ];then
			SIN_LOG="S"			
		fi
	fi

	if [ -n "$ERR" ];then
		log "$ERR" "$ERR_MSG"
		INFO="$INFO""Error en los comandos: $ERR_MSG\n"
	fi

}


function verificar_maestros
{
	#verificacion existencia de los maestros
	

	ERR=''
	ERR_MSG=''


	if [ ! -f "$DATAMAE/errores.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG errores.mae"
	fi

	if [ ! -f "$DATAMAE/encuestadores.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG encuestadores.mae"
	fi

	if [ ! -f "$DATAMAE/encuestas.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG encuestas.mae"
	fi

	if [ ! -f "$DATAMAE/preguntas.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG preguntas.mae"
	fi

	if [ -n "$ERR" ];then
		log "$ERR" "$ERR_MSG"
		INFO="$INFO""Error en los archivos maestros: $ERR_MSG \n"	
	fi

}


function verificar_librerias
{
	#verifica la existencia de las librerias
	#loguearC, mirarC, moverC

	ERR=''
	ERR_MSG=''
	
	debug "verificando librerias en $LIBDIR"

	if [ ! -f "$LIBDIR/loguearC" ];then
		ERR=14
		ERR_MSG="$ERR_MSG loguearC"
	fi

	if [ ! -f "$LIBDIR/mirarC" ];then
		ERR=14
		ERR_MSG="$ERR_MSG mirarC"
	fi

	if [ ! -f "$LIBDIR/moverC" ];then
		ERR=14
		ERR_MSG="$ERR_MSG moverC"
	fi


	if [ -n "$ERR" ];then
		log "$ERR" "$ERR_MSG"
		INFO="$INFO""Error en las librerias: $ERR_MSG \n"
	fi


}



function llamada_detectar
{

	verifica_instancia "detectarC"
 	if [ $INSTANCIA != S ];then
		detectarC  &
		debug "llamando a detectar..."
	else
		debug "detectar esta corriendo..."
	fi

	if [ "$VERSION" -eq 1 ];then
		PID=$(ps -C "detectarC" | head -n 2 | grep ".*detectarC.*" | cut -d ' ' --field=1) #laptop
	else
		PID=$(ps -C "detectarC" | head -n 2 | grep ".*detectarC.*" | cut -d ' ' --field=1) #labo
	fi
	#PID=$(ps | grep '.*detectarC.*' | cut -d ' ' --fields=1)
	#PID=$(echo "$PID" | cut -d ' ' --field=1)
}



########################PRINCIPAL######################


RED=31
GRE=32
BLU=36
YEL=33
STA=00

INFO=''

verificar_parametros "$#" "$1"

if [ "$SALIR" != 'S' ];then

	resolver_path

	verificar_variables

	if [ "$CONTINUA" = "S" ];then

		obtener_version_bash
	
		definir_variables

		verificar_comandos

		verificar_librerias

		verificar_maestros


		if [ -n "$INFO" ];then
			eco "No se pudo iniciar el sistema consultar:"	"$GRE"
			eco "$INFO" "$YEL"
			eco "Se aconseja reinstalar la aplicaci贸n." $GRE
		else
			verificar_variables "S"		
			eco "Inicializaci贸n del Ambiente Concluida \n" "$BLU"
			eco "Ambiente: \n$SETEADAS" "$YEL"
			export ENTORNO_OK="1"
			llamada_detectar
			eco "Demonio corriendo bajo el Nro.: $PID" "$RED"
		fi

	fi
fi

