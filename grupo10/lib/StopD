#!/bin/bash
#$ARRIDIR, $PEPRADIR, $RECHADIR, $BINDIR

function eco
{
    echo -e "\E["$2"m"$1"\033[0m"
}

function verifica_instancia
{
#verifica si existe otra instancia del proceso tanto de detectar como de sumar
#viene en $1
#devuelve $INSTANCIA = S si existe una instancia en ejecucion

    INSTANCIA="N"
    #ps | grep .*$1.* > /dev/null
    PID=$(echo $(ps | awk /$1/' && !/awk/ && !/StopD/ { print $1}'))
    #PID=$(echo $(ps | awk /$PROCESO/' { print $1}'))  
    #echo $(ps | awk /$PROCESO/' && !/awk/ {print $1}')
    if [ "$PID" != "" ];then
        INSTANCIA="S"
    fi
}
function verifico_detectar
{

    verifica_instancia "$1"
    
     if [ $INSTANCIA == "N" ];then
        echo "no hay demonio $1 corriendo..."
    else
        echo "hay que parar el demonio..."
        PID=$(echo $(ps | awk /$1/' && !/awk/ && !/StopD/ { print $1}'))
        echo "El valor de PID es: $PID"
        eco "Demonio corriendo bajo el Nro.: $PID" "$RED"
        kill -9 $PID
        echo "Demonio Terminado"        
    fi

#    PID=$(echo ${file_base%}|awk -F . '{print $NF}')
#    PID=$(ps | grep '.*detectarC.*' | cut -d ' ' --fields=2)
}


########################PRINCIPAL######################


RED=31
GRE=32
BLU=34
YEL=33
STA=00

INFO=''


#if [ ENTORNO_OK != 1 ];then
#    echo "Error: Entorno no inicializado"
#    exit 1
#fi



if [ $# != 1 ];then
    echo "Cantidad de parametros incorrectos"
    return $ERR_CANT_PARAM
fi

if [ $1 = '--help' -o $1 = "-h" ]
then
    mostrarAyuda    
    return 0
fi


verifico_detectar "$1"
return 0
