#!/bin/bash
#$ARRIDIR, $PEPRADIR, $RECHADIR, $BINDIR


function eco
{
	echo -e "\E["$2"m"$1"\033[0m"
}


function debug
{
	if [ A != A ];then
		echo "$1"
	fi
}


function log
{
	#en $1 recibe el codigo de error
	#en $2 recibe el parametro opcional
	
	#se evalua que exista la lib de logueo
	echo $2 | grep .*loguearC.* > /dev/null

	if [ "$SIN_LOG" != "S" ];then 
		if [ -n "$2" ];then
			"$LIBDIR"/loguearC -s "iniciarC" "$1" "$2"
			echo loguear -s "$1" "$2"
		else
			"$LIBDIR"/loguearC -s "$1"
			echo loguear -s "iniciarC" "$1"
		fi
	fi
}


function verifica_instancia
{
#verifica si existe otra instancia del proceso tanto de detectar como de sumar
#viene en $1
#devuelve $INSTANCIA = S si existe una instancia en ejecucion

	INSTANCIA=N

	ps | grep .*$1.* > /dev/null

	if [ "$?" -eq 0 ];then
		INSTANCIA="S"
	fi
}

function preguntar
{
	
	echo -e "Ya se encuentran seteadas las variables: \n"
	echo -e "$SETEADAS"
	echo "Desea continuar con la ejecición (S/N):"
	
	OK=''
	while [ "$OK" != "S" ]
	do
		read RTA

		if [ "$RTA" = "S"  -o "$RTA" = "s" ];then
			CONTINUA="S"
			OK="S"	
		else
			if [ "$RTA" = "N" -o "$RTA" = "n" ];then
				CONTINUA="N"
				OK="S"
			fi
		fi
	done

}

function verificar_variables
{
	CONTINUA=''
	SETEADA=''
	SETEADAS=''
	NO_ASK="$1"

	debug "verificando variables ..."
	debug "$CURRDIR"
	
	if [ -n "$CURRDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$CURRDIR :'"$CURRDIR\n"
	fi

	if [ -n "$ARRIDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$ARRIDIR :'"$ARRIDIR\n"
	fi


	if [ -n "$PREPADIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$PREPADIR :'"$PREPADIR\n"
	fi

	if [ -n "$RECHADIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$RECHADIR :'"$RECHADIR\n"
	fi

	if [ -n "$BINDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$BINDIR :'"$BINDIR\n"
	fi

	if [ -n "$DATAMAE" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$DATAMAE :'"$DATAMAE\n"
	fi

	if [ -n "$LIBDIR" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$LIBDIR :'"$LIBDIR\n"
	fi


	if [ -n "$LOGEXT" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$LOGEXT :'"$LOGEXT\n"
	fi


	if [ -n "$LOGSIZE" ];then
		SETEADA="S"
		SETEADAS="$SETEADAS"'$LOGSIZE :'"$LOGSIZE\n"
	fi
	

	if [ "$SETEADA" = "S" -a "$NO_ASK" != "S" ];then
		preguntar
	else
		CONTINUA="S"	
	fi

}


function resolver_path
{
	GRUPO=$(pwd)
	export GRUPO=$(echo "$GRUPO" | sed -n "s/\(.*\)\(\/bin.*\)/\1/p")
}


function recupera_propiedad
{
	

	PROPIEDAD=$(cat "$GRUPO/conf/InstalarC.conf" | grep "^$1" | cut -d ' ' --fields=3)
	debug "++++++++++ $PROPIEDAD ++++++++++++++"	

}

function definir_variables
{

	recupera_propiedad "CURRDIR"
	export CURRDIR="$PROPIEDAD"

	recupera_propiedad "ARRIDIR"	
	export ARRIDIR="$GRUPO/$PROPIEDAD"

	#recupera_propiedad "PREPADIR"	
	export PREPADIR="$GRUPO/preparados"

	#recupera_propiedad "RECHADIR"
	export RECHADIR="$GRUPO/rechazados"

	recupera_propiedad "BINDIR"
	export BINDIR="$GRUPO/$PROPIEDAD"

	recupera_propiedad "DATAMAE"
	export DATAMAE="$PROPIEDAD"

	recupera_propiedad "LIBDIR"
	export LIBDIR="$PROPIEDAD"

	recupera_propiedad "LOGDIR"
	export LOGDIR="$GRUPO$PROPIEDAD"

	recupera_propiedad "LOGEXT"
	export LOGEXT="$PROPIEDAD"

	recupera_propiedad "MAXLOGSIZE"
	export LOGSIZE=$(echo "$PROPIEDAD"*1024 | bc)


	echo "$PATH" | grep .*"$BINDIR".*"$LIBDIR".* > /dev/null

	if [ "$?" != "0" ];then
		export PATH="$BINDIR":"$LIBDIR":.:$PATH
	fi

	export TSLEEP=30

	chmod 777 "$GRUPO"/*	
	chmod 777 "$BINDIR"/*
	chmod 777 "$LIBDIR"/*

	MAESTROS="encuestadores.mae preguntas.mae encuestas.mae"
	COMANDOS="detectarC sumarC listarC"
	LIBRERIAS="loguearC mirarC moverC"

}



function verificar_comandos
{
	#verificacion de los comandos
	#detectarC, sumarC, listarC

	ERR=''
	ERR_MSG=''

	if [ ! -f "$BINDIR/detectarC" ];then
		ERR=13
		ERR_MSG="$ERR_MSG detectarC"
	fi

	if [ ! -f "$BINDIR/sumarC" ];then
		ERR=13
		ERR_MSG="$ERR_MSG sumarC"
	fi

	if [ ! -f "$BINDIR/listarC" ];then
		ERR=13
		ERR_MSG="$ERR_MSG listarC"
	fi

	SIN_LOG=''
	if [ ! -f "$LIBDIR/loguearC" ];then 
		SIN_LOG="S"
	else
		if [ ! -f "$DATAMAE/errores.mae" ];then
			SIN_LOG="S"			
		fi
	fi

	if [ -n "$ERR" ];then
		log "$ERR" "$ERR_MSG"
		INFO="$INFO""Error en los comandos: $ERR_MSG\n"
	fi

}


function verificar_maestros
{
	#verificacion existencia de los maestros
	

	ERR=''
	ERR_MSG=''


	if [ ! -f "$DATAMAE/errores.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG errores.mae"
	fi

	if [ ! -f "$DATAMAE/encuestadores.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG encuestadores.mae"
	fi

	if [ ! -f "$DATAMAE/encuestas.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG encuestas.mae"
	fi

	if [ ! -f "$DATAMAE/preguntas.mae" ];then
		ERR=12
		ERR_MSG="$ERR_MSG preguntas.mae"
	fi

	if [ -n "$ERR" ];then
		log "$ERR" "$ERR_MSG"
		INFO="$INFO""Error en los archivos maestros: $ERR_MSG \n"	
	fi

}


function verificar_librerias
{
	#verifica la existencia de las librerias
	#loguearC, mirarC, moverC

	ERR=''
	ERR_MSG=''
	
	debug "verificando librerias en $LIBDIR"

	if [ ! -f "$LIBDIR/loguearC" ];then
		ERR=14
		ERR_MSG="$ERR_MSG loguearC"
	fi

	if [ ! -f "$LIBDIR/mirarC" ];then
		ERR=14
		ERR_MSG="$ERR_MSG mirarC"
	fi

	if [ ! -f "$LIBDIR/moverC" ];then
		ERR=14
		ERR_MSG="$ERR_MSG moverC"
	fi


	if [ -n "$ERR" ];then
		log "$ERR" "$ERR_MSG"
		INFO="$INFO""Error en las librerias: $ERR_MSG \n"
	fi


}



function llamada_detectar
{

	verifica_instancia "detectarC"
 	if [ $INSTANCIA != S ];then
		detectarC  &
		debug "llamando a detectar..."
	else
		debug "detectar esta corriendo..."
	fi

	PID=$(ps | grep '.*detectarC.*' | cut -d ' ' --fields=2)
	PID=$(echo "$PID" | cut -d ' ' --field=1)
}



########################PRINCIPAL######################


RED=31
GRE=32
BLU=36
YEL=33
STA=00

INFO=''

resolver_path

verificar_variables

if [ "$CONTINUA" = "S" ];then

	definir_variables

	verificar_comandos

	verificar_librerias

	verificar_maestros


	if [ -n "$INFO" ];then
		eco "No se pudo iniciar el sistema consultar:"	"$GRE"
		eco "$INFO" "$YEL"
		eco "Se aconseja reinstalar la aplicación." $GRE
	else
		verificar_variables "S"		
		eco "Inicialización del Ambiente Concluida \n" "$BLU"
		eco "Ambiente: \n$SETEADAS" "$YEL"
		export ENTORNO_OK="1"
		llamada_detectar
		eco "Demonio corriendo bajo el Nro.: $PID" "$RED"
	fi

fi
